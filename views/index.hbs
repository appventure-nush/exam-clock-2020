<style>
    .login-form {
        width: 340px;
        margin: 50px auto;
        font-size: 15px;
    }

    .login-form form {
        margin-bottom: 15px;
        background: #f7f7f7;
        box-shadow: 0 2px 2px rgba(0, 0, 0, 0.3);
        padding: 30px;
    }

    .login-form h2 {
        margin: 0 0 15px;
    }

    .form-control, .btn {
        min-height: 38px;
        border-radius: 2px;
    }

    .btn {
        font-size: 15px;
        font-weight: bold;
    }

    #clocks:empty::before {
        margin-left: 5px;
        content: "No clocks connected"
    }
</style>
<div class="login-form">
    <form action="/" method="post">
        {{#if error}}
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                Your key is that of a clock of another universe
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        {{/if}}
        {{#if query.clockNotFound}}
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                That clock is not connected
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        {{/if}}
        <h4>Connect to the clock</h4>
        <div class="form-group">
            <label for="nick">Nickname</label>
            <input aria-describedby="nickHelp" class="form-control" id="nick" name="nick" type="text"
                   value="{{user.displayName}}">
            <small id="nickHelp" class="form-text text-muted">Nick name is used only for verification</small>
        </div>
        <div class="form-group">
            <label for="clockID">Clock ID</label>
            <div class="input-group">
                <input class="form-control" id="clockID" name="clockID" type="text">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">Clocks
                    </button>
                    <div class="dropdown-menu" id="clocks"></div>
                </div>
            </div>
        </div>
        <button id="connect" type="submit" class="btn btn-primary btn-block">Connect</button>
    </form>
</div>
<script>
    setActive('clocks');
    const socket = io();
    socket.on('connect', () => { // initial connection
        // socket.emit('controller_connected', socket.id); // tell server ima controller
        console.log("Socket ID", socket.id);
        console.log("Session ID", "{{sessionID}}");
    });
    let respondedAndAccepted = false;
    let timeout;
    const connectBtn = document.getElementById("connect");
    const inputNK = document.getElementById("nick");
    const inputCID = document.getElementById("clockID");
    const clocksUI = document.getElementById("clocks");
    inputCID.value = localStorage.getItem("clockID");

    fetch("/clock").then(res => res.json()).then(clocks => {
        clocksUI.innerHTML = "";
        for (let clock of clocks) clocksUI.innerHTML += `<a id='c_${clock.id}' class="dropdown-item" href="#" onclick="inputCID.value='${clock.id}'">${clock.id} (${clock.name})</a>`;
    });

    socket.on('request_callback', (response, clockID, clockName) => {
        console.log("Request has been responsed with", response);
        if (timeout) clearTimeout(timeout);
        if (response === "accepted") {
            respondedAndAccepted = true;
            connection_history[clockID] = clockName;
            localStorage.setItem('connection_history', JSON.stringify(connection_history));

            $('form').submit();
        } else if (response === "rejected") {
            respondedAndAccepted = false;
            alert("You have been rejected!");
            connectBtn.disabled = false;
            let spinner = connectBtn.getElementsByClassName("spinner-border")[0];
            if (spinner) spinner.remove();
        } else if (response === "not_found") {
            respondedAndAccepted = false;
            alert("Clock not found!");
            connectBtn.disabled = false;
            let spinner = connectBtn.getElementsByClassName("spinner-border")[0];
            if (spinner) spinner.remove();
        }
    });
    socket.on('clock_name_change', (clockID, name) => {
        let clock = document.getElementById('c_' + clockID);
        if (clock) clock.innerHTML = `${clockID} (${name})`;
    });
    socket.on('new_clock', clockJSON => {
        let clock = JSON.parse(clockJSON);
        clocksUI.innerHTML += `<a id='c_${clock.id}' class="dropdown-item" href="#" onclick="inputCID.value='${clock.id}'">${clock.id} (${clock.name})</a>`;
    });
    socket.on('clock_died', clockID => {
        let clock = document.getElementById('c_' + clockID);
        if (clock) clock.remove();
    });

    $('form').submit(e => {
        localStorage.setItem("nick", inputNK.value);
        localStorage.setItem("clockID", inputCID.value);
        if (!respondedAndAccepted) {
            e.preventDefault();
            socket.emit("request", inputCID.value, inputNK.value);
            connectBtn.innerHTML = "<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n" + connectBtn.innerHTML;
            connectBtn.disabled = true;
            if (timeout) clearTimeout(timeout);
            timeout = setTimeout(() => {
                connectBtn.disabled = false;
                let spinner = connectBtn.getElementsByClassName("spinner-border")[0];
                if (spinner) spinner.remove();
                alert("Time out!");
            }, 60000);
            return false;
        } else return true;
    });
</script>